(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{205:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"繁星技术文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#繁星技术文档"}},[t._v("#")]),t._v(" 繁星技术文档")]),t._v(" "),a("p",[t._v("繁星，集成前端开发、调试、打包于一体，各业务线基于此脚手架独立开发，集中维护。\n该项目对底层前端构建进行了统一处理，实现了项目结构自动生成，本地开发环境搭建、打包\b模块生成的一体化功能。\b该项目理论上可以放任何项目，但从适用的角度看，更适用于小型项目或单个的活动页面，繁星的特点是小而多，这也是项目命名为繁星的意义。")]),t._v(" "),a("h2",{attrs:{id:"技术说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术说明"}},[t._v("#")]),t._v(" 技术说明")]),t._v(" "),a("ul",[a("li",[t._v("该项目是基于vue-cli3脚手架，\b对\bvue.config.js进行了扩展，详细可参见\b该文件配置；")]),t._v(" "),a("li",[t._v("\b使用eslint对代码规范进行检测，使用prettier+onchange工具对代码风格进行统一约束，使用pre-commit在代码commit时对代码进行eslint和prettier检查；")]),t._v(" "),a("li",[t._v('代码提交时遵循commitlint规范（参考./commitlint.config.js），例如： git commit -m "docs: 更新readme"')]),t._v(" "),a("li",[t._v("创建新的项目使用命令：node createStar.js 子项目名称 执行完命令后会自动在stars目录下生成对应的子项目，同时会在项目根目录下生成一个star.json文件，该文件中的配置指定了当前要操作的子项目名，如果没有此文件，也可执行上面命令创建：node createStar.js 子项目名称，star.json配置如下：")])]),t._v(" "),a("div",{staticClass:"language-star.json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{"star":"子项目名"}\n')])])]),a("h2",{attrs:{id:"目录说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录说明"}},[t._v("#")]),t._v(" 目录说明")]),t._v(" "),a("ul",[a("li",[t._v("stars 存放所有子项目\n"),a("ul",[a("li",[t._v("\bbase 基础子项目，所有子项目基于该项目生成")]),t._v(" "),a("li",[t._v("common 用于存放公共模块，包含\b公共组件和公共js方法等等")]),t._v(" "),a("li",[t._v("example 示例项目，公共组件的演示")])])]),t._v(" "),a("li",[t._v("webpackPlugins 自定义webpack插件")])]),t._v(" "),a("h2",{attrs:{id:"打包说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包说明"}},[t._v("#")]),t._v(" 打包说明")]),t._v(" "),a("ul",[a("li",[t._v("每次打包前修改stars/子项目/star.config.js中对应的version版本号；")]),t._v(" "),a("li",[t._v("打包预发时，执行 npm run pre 会在项目根目录dist-pre目录下根据版本号生成对应的静态资源；")]),t._v(" "),a("li",[t._v("打包线上时，执行 npm run build 会在项目根目录dist目录下根据版本号生成对应的静态资源；")])]),t._v(" "),a("h2",{attrs:{id:"开发说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发说明"}},[t._v("#")]),t._v(" 开发说明")]),t._v(" "),a("ul",[a("li",[t._v("开发时，在vue文件中，使用this.$log方法打印日志，这样生产环境不会打印日志")]),t._v(" "),a("li",[t._v("优先使用./stars/common/目录中的公共组件和js功能，也可自己在该目录中封装公共模块；")])]),t._v(" "),a("h2",{attrs:{id:"git分支说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git分支说明"}},[t._v("#")]),t._v(" git分支说明")]),t._v(" "),a("ul",[a("li",[t._v("各业务线开发时从master分支新建一个自己的分支，最好将自己的分支push到远程分支，每次上完线需要将该分支和master分支进行合并；")]),t._v(" "),a("li",[t._v("默认会有master和common分支，这2个分支提交代码时会进行代码评审，通过后方可进行合并；")]),t._v(" "),a("li",[t._v("common分支：当自己贡献公共代码时在common分支上面进行修改，然后合并到master分支；")]),t._v(" "),a("li",[t._v("master分支：将各个稳定代码的分支合并到master分支；")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Project setup")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create star")]),t._v("\nnode createStar.js 子项目名称\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create code block")]),t._v("\nnode createStar.js 子项目名称 --block\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当代码中提示eslint报错时，可执行该命令进行修复")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run fix\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Compiles and hot-reloads for development")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run serve\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 预发打包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run pre\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上线打包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);